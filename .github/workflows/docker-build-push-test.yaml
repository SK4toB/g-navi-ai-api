name: FastAPI Docker Build & Push

on:
    push:
        branches: [main, ci/k8s]
    pull_request:
        branches: [main]

env:
    IMAGE_REGISTRY: amdp-registry.skala-ai.com/skala25a
    BASE_IMAGE_NAME: sk-gnavi4-ai-base
    APP_IMAGE_NAME: sk-gnavi4-ai
    BASE_VERSION: '1.0.0'
    DOCKER_CREDENTIAL_ID: skala-image-registry-id

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        timeout-minutes: 15 # 베이스 이미지 사용으로 시간 단축
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.IMAGE_REGISTRY }}
                  username: ${{ secrets.HARBOR_USERNAME }}
                  password: ${{ secrets.HARBOR_PASSWORD }}

            - name: Generate image tag
              id: generate_tag
              run: |
                  BUILD_NUMBER="${{ github.run_number }}"
                  HASH=$(date +%s%N | sha256sum | cut -c1-12)
                  FINAL_IMAGE_TAG="${BUILD_NUMBER}-${HASH}"
                  echo "FINAL_IMAGE_TAG=$FINAL_IMAGE_TAG" >> $GITHUB_ENV
                  echo "Final Tag: $FINAL_IMAGE_TAG"

            # 애플리케이션 이미지만 빌드 (베이스 이미지 재사용)
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64
                  push: true
                  tags: |
                      ${{ env.IMAGE_REGISTRY }}/${{ env.APP_IMAGE_NAME }}:${{ env.FINAL_IMAGE_TAG }}
                      ${{ env.IMAGE_REGISTRY }}/${{ env.APP_IMAGE_NAME }}:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  # 빌드 최적화를 위한 빌드 인자
                  build-args: |
                      BUILDKIT_INLINE_CACHE=1
                      BASE_IMAGE_TAG=${{ env.BASE_VERSION }}
              timeout-minutes: 10

            - name: Image build success
              run: |
                  echo "✅ Docker 이미지 빌드 및 푸시 성공"
                  echo "베이스 이미지: ${{ env.IMAGE_REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_VERSION }}"
                  echo "앱 이미지: ${{ env.IMAGE_REGISTRY }}/${{ env.APP_IMAGE_NAME }}:${{ env.FINAL_IMAGE_TAG }}"
                  echo "베이스 이미지 재사용으로 빌드 시간 대폭 단축!"
                  echo "Harbor에서 확인바람"
